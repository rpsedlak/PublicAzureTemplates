{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentBaseName": {
            "type": "string",
            "maxLength": 12,
            "metadata": {
                "description": "This will be the start of all the Azure resource names. The VM, virtual network, network security group, and others will be created using this name. It is limited to 12 characters."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "This is the admin user name for the VM that is created. 'Admin' and 'administrator' are reserved by Azure and may not be used."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password should be 12 characters or more and contain at least one uppercase, one lowercase, a number, and a symbol."
            }
        },
        "numberOfVirtualMachines": {
            "type": "int",
            "minValue": 1,
            "maxValue": 9,
            "defaultValue": 1,
            "metadata": {
                "description": "Change this value to build up to 9 virtual machines in this simulation environment."
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "VNET": {
            "name": "[concat(parameters('environmentBaseName'),'-vnet')]",
            "addressSpace": "10.0.0.0/24"
        },
        "VM": {
            "baseName": "[concat(parameters('environmentBaseName'),'vm')]",
            "vmSize": "Standard_A1",
            "image": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2016-Datacenter-smalldisk",
                "version": "latest"        
            },
            "diagStorageAccount": "[concat('diag',uniqueString(resourceGroup().id,deployment().name))]",
            "subnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('VNET').name,'default')]"
        }
    },
    "resources": [
        {
            "name": "[concat(variables('VM').baseName,copyIndex(1))]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[variables('location')]",
            "copy": {
                "name": "VMLoop",
                "count": "[parameters('numberOfVirtualMachines')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('VM').baseName,copyIndex(1),'-nic') )]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('VM').diagStorageAccount)]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('VM').baseName,copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[variables('VM').vmSize]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('VM').image.publisher]",
                        "offer": "[variables('VM').image.offer]",
                        "sku": "[variables('VM').image.sku]",
                        "version": "[variables('VM').image.version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VM').baseName,copyIndex(1),'-nic') )]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https','://',variables('VM').diagStorageAccount,'.blob.core.windows.net','/')]"
                    }
                }
            }
        },
        {
            "name": "[variables('VM').diagStorageAccount]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "name": "[concat(variables('VM').baseName,copyIndex(1),'-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[variables('location')]",
            "copy": {
                "name": "NICLoop",
                "count": "[parameters('numberOfVirtualMachines')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('VNET').name)]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', concat(variables('VM').baseName,copyIndex(1),'-ip') )]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('VM').subnetID]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses/', concat(variables('VM').baseName,copyIndex(1),'-ip') )]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('VM').baseName,copyIndex(1),'-ip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "copy": {
                "name": "IPLoop",
                "count": "[parameters('numberOfVirtualMachines')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('VM').baseName,copyIndex(1)))]"
                }
            }
        },
        {
            "name": "[concat(parameters('environmentBaseName'),'-nsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "location": "[variables('location')]",
            "properties":{
                "securityRules": [
                    {
                        "name": "RDP-INBOUND",
                        "properties": {
                            "access": "Allow",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389",
                            "direction": "Inbound",
                            "priority": 2000
                        }
                    }
                ]
            }
        },
        {
            "comments": "Virtual Network",
            "apiVersion": "2015-06-15",
            "name": "[variables('VNET').name]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',concat(parameters('environmentBaseName'),'-nsg'))]"
            ],
            "properties": {
                "addressSpace":{
                    "addressPrefixes": [
                        "[variables('VNET').addressSpace]"
                    ]
                },
                "subnets":[
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "[variables('VNET').addressSpace]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(parameters('environmentBaseName'),'-nsg'))]"
                            }
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
